@page "/Tecnico/Delete"
@page "/Tecnico/Delete/{TecnicoId:int}"
@inject TecnicoServices tecnicosService
@inject NavigationManager navigationManager
@inject TiposTecnicoServices tipoTecnicoService

@rendermode InteractiveServer

<PageTitle>Eliminar Tecnico</PageTitle>

@if (Tecnico != null)
{
    <div class="container">
        <div class="card shadow-header">
            <!-- Header -->
            <div class="card-header  bg-primary text-white text-center py-2 rounded">
                <h3><strong>Eliminar tecnico</strong></h3>
            </div>
            <div class="card-header">
                <h3 class="text-danger">¿Seguro de que quieres eliminar este tecnico?</h3>
            </div>
            <!-- Body -->
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card shadow-lg">
                            <div class="card-header">
                                <h3 class="text-center"><strong>Datos del tecnico</strong></h3>
                            </div>
                            <div class="card-body">
                                <div class="border-primary border-2 borde">
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-8">
                                                <ul class="list-unstyled">
                                                    <li><strong>TecnicoId:</strong> @Tecnico.TecnicoId</li>
                                                    <li><strong>Nombres:</strong> @Tecnico.Nombres</li>
                                                    <li><strong>Tipo de Técnico:</strong> @GetTipoTecnicoDescripcion(Tecnico.TipoTecnicoId)</li>
                                                    <li><strong>Sueldo Hora:</strong> @Tecnico.SueldoHora</li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Footer -->
            <div class="card-footer">
                <button type="button" class="btn btn-outline-danger" @onclick="EliminarTecnico"><i class="bi bi-trash-fill"></i> Eliminar</button>
                <button type="button" class="btn btn-outline-primary" @onclick="Volver"><i class="bi bi-box-arrow-left"></i> Volver</button>
            </div>
        </div>
    </div>
}
else
{
    <p>No se halló el tecnico.</p>
}

@code {
    [Parameter]
    public int TecnicoId { get; set; }
    public Tecnicos? Tecnico { get; set; } = new Tecnicos();
    public List<TiposTecnicos> Lista_TipoTecnicos { get; set; } = new List<TiposTecnicos>();

    protected override async Task OnInitializedAsync()
    {
        Lista_TipoTecnicos = await tipoTecnicoService.GetTipoTecnicos();

        if (TecnicoId != 0)
        {
            Tecnico = await tecnicosService.Buscar(TecnicoId);
        }
    }

    public async Task EliminarTecnico()
    {
        if (TecnicoId == 0 || Tecnico == null)
        {
            return;
        }

        if (await tecnicosService.Eliminar(TecnicoId))
        {
            Volver();
        }
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Tecnico/Index");
    }

    private string GetTipoTecnicoDescripcion(int tipoTecnicoId)
    {
        var tipo = Lista_TipoTecnicos.FirstOrDefault(t => t.TipoTecnicoId == tipoTecnicoId);
        return tipo?.Descripcion ?? "No disponible..";
    }
}